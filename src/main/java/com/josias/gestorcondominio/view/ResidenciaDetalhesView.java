/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.josias.gestorcondominio.view;

import com.josias.gestorcondominio.controller.MesDevidoController;
import com.josias.gestorcondominio.controller.PessoaController;
import com.josias.gestorcondominio.model.MesDevido;
import com.josias.gestorcondominio.model.Morador;
import com.josias.gestorcondominio.model.Proprietario;
import com.josias.gestorcondominio.model.Residencia;
import com.josias.gestorcondominio.observer.Observer;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JosiasHenrique
 */
public class ResidenciaDetalhesView extends javax.swing.JFrame implements Observer {

    private int residenciaId;
    private boolean ordemAscendente = true;
    private Proprietario proprietario = new Proprietario();
    PessoaController pc = PessoaController.getInstancia();
    MesDevidoController mdc = MesDevidoController.getInstancia();

    /**
     * Creates new form ResidenciaDetalhesView
     */
    public ResidenciaDetalhesView(int residenciaId) {
        this.residenciaId = residenciaId;
        initComponents();
        pc.registrarObservador(this);
        mdc.registrarObservador(this);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        obterProprietario();
        carregarMoradores();
        carregarDividas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbProprietario = new javax.swing.JLabel();
        lbIdade = new javax.swing.JLabel();
        lbRG = new javax.swing.JLabel();
        lbCPF = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMoradores = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDividas = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        totalDividas = new javax.swing.JLabel();
        btnExcluirProprietario = new javax.swing.JButton();
        btnEditarProprietario = new javax.swing.JButton();
        btnEditarMorador = new javax.swing.JButton();
        btnNovoMorador = new javax.swing.JButton();
        btnExcluirMorador = new javax.swing.JButton();
        btnNovaDivida = new javax.swing.JButton();
        btnExcluirDivida = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Proprietário: ");

        jLabel3.setText("Idade:");

        jLabel4.setText("RG:");

        jLabel5.setText("CPF:");

        jTableMoradores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod", "Nome", "Idade", "RG", "CPF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableMoradores);

        jLabel2.setText("Moradores");

        jLabel6.setText("Dívidas");

        jTableDividas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cod", "Mes", "Ano", "Valor R$"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableDividas);

        jLabel7.setText("Total de Dívidas");

        btnExcluirProprietario.setText("Excluir Proprietário");
        btnExcluirProprietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProprietarioActionPerformed(evt);
            }
        });

        btnEditarProprietario.setText("Editar Proprietário");
        btnEditarProprietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProprietarioActionPerformed(evt);
            }
        });

        btnEditarMorador.setText("Editar Morador");
        btnEditarMorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarMoradorActionPerformed(evt);
            }
        });

        btnNovoMorador.setText("Novo Morador");
        btnNovoMorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoMoradorActionPerformed(evt);
            }
        });

        btnExcluirMorador.setText("Excluir Morador");
        btnExcluirMorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirMoradorActionPerformed(evt);
            }
        });

        btnNovaDivida.setText("Nova Dívida");
        btnNovaDivida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaDividaActionPerformed(evt);
            }
        });

        btnExcluirDivida.setText("Excluir Dívida");
        btnExcluirDivida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirDividaActionPerformed(evt);
            }
        });

        btnOrdenar.setText("Asc/Desc");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNovaDivida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluirDivida))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNovoMorador)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditarMorador)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluirMorador))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6)
                                .addComponent(jScrollPane2)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbProprietario))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbIdade))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbCPF))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbRG))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btnExcluirProprietario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditarProprietario)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(totalDividas)
                                    .addGap(24, 24, 24))
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(btnOrdenar)))
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbProprietario)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lbIdade)
                    .addComponent(totalDividas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbRG))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lbCPF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluirProprietario)
                    .addComponent(btnEditarProprietario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(btnOrdenar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEditarMorador)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNovoMorador)
                        .addComponent(btnExcluirMorador)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovaDivida)
                    .addComponent(btnExcluirDivida))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProprietarioActionPerformed
        // TODO add your handling code here:
        if (proprietario == null) {
            javax.swing.JOptionPane.showMessageDialog(
                    this,
                    "Não existe proprietário para ser editado",
                    "Aviso",
                    javax.swing.JOptionPane.WARNING_MESSAGE
            );
            return;
        }
        ProprietarioFormView formView = new ProprietarioFormView(proprietario);
        formView.setVisible(true);
    }//GEN-LAST:event_btnEditarProprietarioActionPerformed

    private void btnExcluirProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProprietarioActionPerformed
        // TODO add your handling code here:

        if (proprietario == null) {
            javax.swing.JOptionPane.showMessageDialog(
                    this,
                    "Não existe proprietário para ser excluído",
                    "Aviso",
                    javax.swing.JOptionPane.WARNING_MESSAGE
            );
            return;
        }

        int confirmacao = JOptionPane.showConfirmDialog(this,
                "Tem certeza que deseja excluir este proprietário?\nEssa ação não pode ser desfeita.",
                "Confirmação de Exclusão",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (confirmacao == JOptionPane.YES_OPTION) {
            if (pc.excluirProprietario(proprietario.getId())) {
                JOptionPane.showMessageDialog(this, "Proprietário excluído com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Falha ao excluir o proprietário. Tente novamente.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnExcluirProprietarioActionPerformed

    private void btnNovoMoradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoMoradorActionPerformed
        // TODO add your handling code here:
        Residencia residencia = new Residencia();
        residencia.setId(residenciaId);
        Morador morador = new Morador();
        morador.setResidencia(residencia);
        MoradorFormView form = new MoradorFormView(morador);
        form.setVisible(true);
    }//GEN-LAST:event_btnNovoMoradorActionPerformed

    private void btnEditarMoradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarMoradorActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = jTableMoradores.getSelectedRow();
        if (linhaSelecionada >= 0) {
            // Obtém os dados da linha selecionada
            int id = (int) jTableMoradores.getValueAt(linhaSelecionada, 0);
            String nome = (String) jTableMoradores.getValueAt(linhaSelecionada, 1);
            int idade = (int) jTableMoradores.getValueAt(linhaSelecionada, 2);
            String rg = (String) jTableMoradores.getValueAt(linhaSelecionada, 3);
            String cpf = (String) jTableMoradores.getValueAt(linhaSelecionada, 4);

            Residencia residencia = new Residencia();
            residencia.setId(residenciaId);
            Morador moradorEdit = new Morador(residencia, idade, nome, rg, cpf);
            moradorEdit.setId(id);

            MoradorFormView form = new MoradorFormView(moradorEdit);
            form.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um morador na tabela.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarMoradorActionPerformed

    private void btnExcluirMoradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirMoradorActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = jTableMoradores.getSelectedRow();
        if (linhaSelecionada >= 0) {
            // Obtém os dados da linha selecionada
            int id = (int) jTableMoradores.getValueAt(linhaSelecionada, 0);

            // Confirmação antes de excluir
            int confirmacao = JOptionPane.showConfirmDialog(
                    this,
                    "Tem certeza que deseja excluir este proprietário?\nEssa ação não pode ser desfeita.",
                    "Confirmação de Exclusão",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirmacao == JOptionPane.YES_OPTION) {
                if (pc.excluirMorador(id)) {
                    JOptionPane.showMessageDialog(
                            this,
                            "Morador excluído com sucesso.",
                            "Sucesso",
                            JOptionPane.INFORMATION_MESSAGE
                    );

                } else {
                    JOptionPane.showMessageDialog(
                            this,
                            "Erro ao excluir morador. Tente novamente.",
                            "Erro",
                            JOptionPane.ERROR_MESSAGE
                    );
                }
            }
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Por favor, selecione um morador para excluir.",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE
            );
        }
    }//GEN-LAST:event_btnExcluirMoradorActionPerformed

    private void btnExcluirDividaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirDividaActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = jTableDividas.getSelectedRow();
        if (linhaSelecionada >= 0) {
            // Obtém os dados da linha selecionada
            int id = (int) jTableDividas.getValueAt(linhaSelecionada, 0);

            // Confirmação antes de excluir
            int confirmacao = JOptionPane.showConfirmDialog(
                    this,
                    "Tem certeza que deseja excluir dívida?\nEssa ação não pode ser desfeita.",
                    "Confirmação de Exclusão",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirmacao == JOptionPane.YES_OPTION) {
                if (mdc.excluirMesDevido(id)) {
                    JOptionPane.showMessageDialog(
                            this,
                            "Dívida excluída com sucesso.",
                            "Sucesso",
                            JOptionPane.INFORMATION_MESSAGE
                    );

                } else {
                    JOptionPane.showMessageDialog(
                            this,
                            "Erro ao excluir dívida. Tente novamente.",
                            "Erro",
                            JOptionPane.ERROR_MESSAGE
                    );
                }
            }
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Por favor, selecione uma dívida para excluir.",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE
            );
        }
    }//GEN-LAST:event_btnExcluirDividaActionPerformed

    private void btnNovaDividaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaDividaActionPerformed
        // TODO add your handling code here:
        MesDevidoFormView form = new MesDevidoFormView(residenciaId);
        form.setVisible(true);
    }//GEN-LAST:event_btnNovaDividaActionPerformed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        // TODO add your handling code here:
        carregarMoradores();
    }//GEN-LAST:event_btnOrdenarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResidenciaDetalhesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResidenciaDetalhesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResidenciaDetalhesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResidenciaDetalhesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResidenciaDetalhesView().setVisible(true);
            }
        });
         */
    }

    private void obterProprietario() {
        proprietario = pc.obterProprietarioPorResidencia(residenciaId);

        if (proprietario != null) {
            lbProprietario.setText(proprietario.getNome());
            lbIdade.setText(proprietario.getIdade() + " anos");
            lbRG.setText(proprietario.getRg());
            lbCPF.setText(proprietario.getCpf());
        } else {
            lbProprietario.setText("Não informado");
            lbIdade.setText("N/A");
            lbRG.setText("N/A");
            lbCPF.setText("N/A");
        }
    }

    private void carregarMoradores() {
        List<Morador> moradores = pc.listarMoradoresPorResidencia(residenciaId);

        moradores.sort((m1, m2)
                -> ordemAscendente ? m1.getNome().compareToIgnoreCase(m2.getNome())
                        : m2.getNome().compareToIgnoreCase(m1.getNome())
        );

        DefaultTableModel modelo = (DefaultTableModel) jTableMoradores.getModel();

        modelo.setRowCount(0);

        for (Morador m : moradores) {
            Object[] linha = {m.getId(), m.getNome(), m.getIdade(), m.getRg(), m.getCpf()};
            modelo.addRow(linha);
        }
        ordemAscendente = !ordemAscendente;
    }

    private void carregarDividas() {
        List<MesDevido> mesesDevidos = mdc.listarMesesDevidosPorResidencia(residenciaId);
        double somaTotal = 0.0;
        DefaultTableModel modelo = (DefaultTableModel) jTableDividas.getModel();

        modelo.setRowCount(0);

        for (MesDevido m : mesesDevidos) {
            somaTotal += m.getValor();
            Object[] linha = {m.getId(), m.getMes(), m.getAno(), m.getValor()};
            modelo.addRow(linha);
        }

        totalDividas.setText(String.valueOf(somaTotal));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditarMorador;
    private javax.swing.JButton btnEditarProprietario;
    private javax.swing.JButton btnExcluirDivida;
    private javax.swing.JButton btnExcluirMorador;
    private javax.swing.JButton btnExcluirProprietario;
    private javax.swing.JButton btnNovaDivida;
    private javax.swing.JButton btnNovoMorador;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDividas;
    private javax.swing.JTable jTableMoradores;
    private javax.swing.JLabel lbCPF;
    private javax.swing.JLabel lbIdade;
    private javax.swing.JLabel lbProprietario;
    private javax.swing.JLabel lbRG;
    private javax.swing.JLabel totalDividas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void atualizar() {
        obterProprietario();
        carregarMoradores();
        carregarDividas();
    }
}
